{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/justinlee/repos/uTerm/frontend/src/app/api/tabproxy/route.js"],"sourcesContent":["// app/api/tabproxy/route.js\n\n// Author: Justin Lee\n// Description: API route for proxying tab command requests to the backend\n\nexport async function GET(req) {\n    const { searchParams } = new URL(req.url);\n    const universeid = searchParams.get('universeid');\n    const command = searchParams.get('command');\n  \n    try {\n      const res = await fetch(`https://backend-4na6.onrender.com/tab/?universeid=${universeid}&command=${encodeURIComponent(command)}`, {\n        method: 'GET',\n        headers: {\n          'X-API-Key': process.env.BACKEND_API_KEY,\n        },\n      });\n  \n      const data = await res.json();\n  \n      return new Response(JSON.stringify(data), {\n        status: res.status,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    } catch (err) {\n      return new Response(JSON.stringify({ error: err.message }), {\n        status: 500,\n      });\n    }\n  }"],"names":[],"mappings":"AAAA,4BAA4B;AAE5B,qBAAqB;AACrB,0EAA0E;;;;AAEnE,eAAe,IAAI,GAAG;IACzB,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,aAAa,aAAa,GAAG,CAAC;IACpC,MAAM,UAAU,aAAa,GAAG,CAAC;IAEjC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,CAAC,kDAAkD,EAAE,WAAW,SAAS,EAAE,mBAAmB,UAAU,EAAE;YAChI,QAAQ;YACR,SAAS;gBACP,aAAa,QAAQ,GAAG,CAAC,eAAe;YAC1C;QACF;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,OAAO;YACxC,QAAQ,IAAI,MAAM;YAClB,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,KAAK;QACZ,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,IAAI;YAC1D,QAAQ;QACV;IACF;AACF","debugId":null}}]
}